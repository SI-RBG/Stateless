DROP DATABASE IF EXISTS db;
CREATE DATABASE db;
USE db;

DROP TABLE IF EXISTS config;
DROP TABLE IF EXISTS templates;
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS competitions;
DROP TABLE IF EXISTS teams;
DROP TABLE IF EXISTS vms;

-- After install()
CREATE TABLE config(
	ID INTEGER NOT NULL AUTO_INCREMENT,
	VSPHERE_SERVER VARCHAR(50) NOT NULL,
	DC_NAME VARCHAR(50) NOT NULL,
	DOMAIN VARCHAR(80) NOT NULL,
	CONSTRAINT users_pk PRIMARY KEY(ID)
);

--  For Packer's results
CREATE TABLE templates(
	ID INTEGER NOT NULL AUTO_INCREMENT,
	TEMPLATES_NAME VARCHAR(50) NOT NULL,
	OTHER VARCHAR(300) NOT NULL,
	CONSTRAINT users_pk PRIMARY KEY(ID)
);

CREATE TABLE events(
	ID INTEGER NOT NULL AUTO_INCREMENT,
	BYUSER VARCHAR(50) NOT NULL,
	EVENT_NAME VARCHAR(50) NOT NULL,
	DESCRIPTIONS VARCHAR(500) NOT NULL,
	CREATION_DATE VARCHAR(50) NOT NULL,
	CONSTRAINT users_pk PRIMARY KEY(ID)
);

 -- TODO ADD the three more things from CompObject
 --         self.datastore = None
 --         self.vSphereFolder = None
 --         self.ResourcePool = None
CREATE TABLE competitions(
	ID INTEGER NOT NULL AUTO_INCREMENT,
	UNAME VARCHAR(50) NOT NULL,  -- HAS TO BE A unique names
	TEAMS INTEGER NOT NULL,
	CREATED_TEAMS INTEGER NOT NULL,
	WIN_VMS INTEGER NOT NULL,
	UNIX_VMS INTEGER NOT NULL,
	TOTAL_VMS INTEGER NOT NULL,
	TOTAL_CREATED_VMS INTEGER NOT NULL,
	CREATED_FLAG INTEGER NOT NULL, -- 0, means undeployed. 1, means deploying. 2, means deployed.
	CREATED_FLAG_C INTEGER NOT NULL,
	CONSTRAINT users_pk PRIMARY KEY(ID)
);


CREATE TABLE teams(
	ID INTEGER NOT NULL AUTO_INCREMENT,
	COMPETITION_NAME VARCHAR(50) NOT NULL,  -- A unique name
	TEAM VARCHAR(50) NOT NULL,
	DOMAIN_NAME VARCHAR(50) NOT NULL,
	SUBNET VARCHAR(50) NOT NULL,
	GATEWAY VARCHAR(50) NOT NULL,
	DNS_SERVER1 VARCHAR(50) NOT NULL,
	NIC VARCHAR(50) NOT NULL,
	CREATED_FLAG INTEGER NOT NULL,
	CREATED_FLAG_C INTEGER NOT NULL, -- Created/Edited flag
	CREATED_VMS_FLAG INTEGER NOT NULL, -- I don't need it anymore
	CONFIGURED_VMS_FLAG INTEGER NOT NULL, --
	CONSTRAINT users_pk PRIMARY KEY(ID)
);


CREATE TABLE vms(
	ID INTEGER NOT NULL AUTO_INCREMENT,
	COMPETITION_NAME VARCHAR(50) NOT NULL,  -- A unique name
	TEAM VARCHAR(50) NOT NULL,
	VM_NAME VARCHAR(50) NOT NULL, -- This is "Name" and "Hostname"
	TEMPLATE_NAME VARCHAR(50) NOT NULL,
	CPU VARCHAR(50) NOT NULL,
	DISK VARCHAR(50) NOT NULL,
	MEMORY VARCHAR(50) NOT NULL,
    GUEST_OS_TYPE VARCHAR(50),
    CREATED_FLAG INTEGER NOT NULL,
	CREATED_FLAG_C INTEGER NOT NULL,
	CONSTRAINT users_pk PRIMARY KEY(ID)
);


CREATE TABLE packer_templates(
	ID INTEGER NOT NULL AUTO_INCREMENT,
	VM_NAME VARCHAR(50) NOT NULL,
	TEMPLATE_NAME VARCHAR(50) NOT NULL,
	CPU VARCHAR(50) NOT NULL,
	DISK VARCHAR(50) NOT NULL,
	MEMORY VARCHAR(50) NOT NULL,
	IP_ADDRESS VARCHAR(50),
	USERNAME VARCHAR(50) NOT NULL,
	PASSWORD VARCHAR(50),
    GUEST_OS_TYPE VARCHAR(50),
    CREATED_FLAG INTEGER NOT NULL,
	CREATED_FLAG_C INTEGER NOT NULL,
	CONSTRAINT users_pk PRIMARY KEY(ID)
);


CREATE TABLE gt_templates(
	ID INTEGER NOT NULL AUTO_INCREMENT,
	GUEST_NAME VARCHAR(80) NOT NULL,
	GUEST_TYPE VARCHAR(80) NOT NULL,
	ISO_PATH VARCHAR(200) NOT NULL,
	CONSTRAINT users_pk PRIMARY KEY(ID)
);


CREATE TABLE undeployed_vms(
	ID INTEGER NOT NULL AUTO_INCREMENT,
	COMPETITION_NAME VARCHAR(50) NOT NULL,
	TEAM VARCHAR(50) NOT NULL,
	VM_NAME VARCHAR(50) NOT NULL,
	CPU VARCHAR(50) NOT NULL,
	DISK VARCHAR(50) NOT NULL,
	MEMORY VARCHAR(50) NOT NULL,
    GUEST_OS_TYPE VARCHAR(50), -- This is the Guest id from gt_templates table.
    CREATED_FLAG INTEGER NOT NULL,
	CREATED_FLAG_C INTEGER NOT NULL,
	CONSTRAINT users_pk PRIMARY KEY(ID)
);

CREATE TABLE wizard_vms(
	ID INTEGER NOT NULL AUTO_INCREMENT,
	COMPETITION_NAME VARCHAR(50) NOT NULL,
	TEAM VARCHAR(50) NOT NULL,
	VM_NAME VARCHAR(50) NOT NULL,
	CPU VARCHAR(50) NOT NULL,
	DISK VARCHAR(50) NOT NULL,
	MEMORY VARCHAR(50) NOT NULL,
    GUEST_OS_TYPE VARCHAR(50),
    CREATED_FLAG INTEGER NOT NULL,
	CREATED_FLAG_C INTEGER NOT NULL,
	CONSTRAINT users_pk PRIMARY KEY(ID)
);


-- This is the type of systems that can be deployed.
INSERT INTO gt_templates (GUEST_NAME, GUEST_TYPE, ISO_PATH) VALUES (
    'ubuntu_18.04.3_server',
    'ubuntu64Guest' ,
    '[datastore2] ISOs/LinuxServers/ubuntu-18.04.3-server-amd64.iso');

INSERT INTO gt_templates(GUEST_NAME, GUEST_TYPE,  ISO_PATH) VALUES (
    'en_windows_server_2016_x64' ,
    'windows9Server64Guest' ,
    '[datastore2] ISOs/Windows_2016/en_windows_server_2016_updated_feb_2018_x64_dvd_11636692.iso');

INSERT INTO gt_templates(GUEST_NAME, GUEST_TYPE,  ISO_PATH) VALUES (
    'en_windows_server_2019_x64' ,
    'windows9Server64Guest' ,
    '[datastore2] ISOs/Windows_2019/en_windows_server_2019_x64_dvd_3c2cf1202.iso');


--  For the active users
-- CREATE TABLE logged(
-- 	ID INTEGER NOT NULL AUTO_INCREMENT,
-- 	USERNAME VARCHAR(50) NOT NULL,
-- 	HASHEDPASSWORD VARCHAR(300) NOT NULL,
-- 	CREATIONDATE DATE,
-- 	CONSTRAINT users_pk PRIMARY KEY(ID)
-- );


-- CREATE TABLE users(
-- 	UID INTEGER NOT NULL AUTO_INCREMENT,
-- 	Username VARCHAR(30) NOT NULL,
-- 	HashedPass VARCHAR(128) NOT NULL,
-- 	CREATIONDATE2 DATE,
-- 	Email VARCHAR(50),
-- 	CONSTRAINT users_pk PRIMARY KEY(UID)
-- );


-- CREATE TABLE video(
-- 	VID INTEGER NOT NULL AUTO_INCREMENT,
-- 	UID INTEGER NOT NULL,
-- 	VideoOwner VARCHAR(30) NOT NULL,
-- 	VideoTitle VARCHAR(100),
-- 	VideoURL VARCHAR(2000),
-- 	DateUploaded DATE,
-- 	CONSTRAINT Video_pk PRIMARY KEY(VID),
-- 	CONSTRAINT Video_fk FOREIGN KEY (UID)
-- 		REFERENCES users(UID)
-- 			ON DELETE CASCADE
-- 			ON UPDATE CASCADE
-- );